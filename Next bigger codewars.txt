#include <stdio.h> 
#include <stdlib.h> 
#include <stdbool.h>

 
void swap(char *a, char *b); 
void sort(char arr[], int low, int high); 
void reverse(char str[], int length)
{
    int start = 0;
    int end = length - 1;
    while (start < end) {
        char temp = str[start];
        str[start] = str[end];
        str[end] = temp;
        end--;
        start++;
    }
}

char* citoa(long long num, char* str)
{
    int i = 0;
    bool isNegative = false;
 
    
    if (num == 0) {
        str[i++] = '0';
        str[i] = '\0';
        return str;
    }

    if (num < 0 ) {
        isNegative = true;
        num = -num;
    }
 
    while (num != 0) {
        long long rem = num % 10;
        str[i++] = (rem > 9) ? (rem - 10) + 'a' : rem + '0';
        num = num / 10;
    }
 
    if (isNegative)
        str[i++] = '-';
 
    str[i] = '\0'; 
 

    reverse(str, i);
 
    return str;
}


long long my_atoi(char* str)
{
    long long res = 0;
    for (int i = 0; str[i] != '\0'; ++i)
        res = res * 10 + str[i] - '0';
    return res;
}



long long next_bigger_number(long long not_n) { 
    long long tempo = not_n;
    int len = 0;
    while(tempo!=0){
        tempo /= 10;
        len++;
    }

    char * number; 
    number = (char*)malloc(len * sizeof(char)); 
    citoa(not_n, number); 
     
 
    int i, j; 
    for(i = len - 1; i > 0; i--) { 
        if(number[i] > number[i - 1]) { 
            break; 
        } 
    } 
 
    if(i == 0) { 
        return -1; 
    } 
 
    int x = number[i - 1], smallest = i; 
    for(j = i + 1; j < len; j++) { 
        if(number[j] > x && number[j] < number[smallest]) { 
            smallest = j; 
        } 
    } 
 
    swap(&number[i - 1], &number[smallest]); 
 
    sort(number, i, len - 1); 
 
 
    return my_atoi(number); 
 
} 
 
void swap(char *a, char *b) { 
    char temp = *a; 
    *a = *b; 
    *b = temp; 
} 
 
void sort(char arr[], int low, int high) { 
    for (int i = low; i <= high; i++) { 
        for (int j = i + 1; j <= high; j++) { 
            if (arr[i] > arr[j]) { 
                swap(&arr[i], &arr[j]); 
            } 
        } 
    } 
}